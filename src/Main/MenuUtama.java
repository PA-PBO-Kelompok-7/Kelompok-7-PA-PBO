/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import view.form_teacher;
import view.form_student;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import model.Modellogin;
import view.Mapel;
import view.Raport;

/**
 *
 * @author ACER
 */
public class MenuUtama extends javax.swing.JFrame {
    
    private Modellogin modlogin;
    
    public MenuUtama(String Id, String Username, String Level2) {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        navbar_pn = new javax.swing.JPanel();
        sidebar_pn = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menu_pn = new javax.swing.JPanel();
        content_pn = new javax.swing.JPanel();
        main_pn = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        navbar_pn.setBackground(new java.awt.Color(0, 155, 76));
        navbar_pn.setPreferredSize(new java.awt.Dimension(804, 50));

        javax.swing.GroupLayout navbar_pnLayout = new javax.swing.GroupLayout(navbar_pn);
        navbar_pn.setLayout(navbar_pnLayout);
        navbar_pnLayout.setHorizontalGroup(
            navbar_pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        navbar_pnLayout.setVerticalGroup(
            navbar_pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        getContentPane().add(navbar_pn, java.awt.BorderLayout.PAGE_START);

        sidebar_pn.setBackground(new java.awt.Color(255, 255, 255));
        sidebar_pn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 155, 76)));
        sidebar_pn.setPreferredSize(new java.awt.Dimension(250, 362));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        menu_pn.setBackground(new java.awt.Color(255, 255, 255));
        menu_pn.setLayout(new javax.swing.BoxLayout(menu_pn, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(menu_pn);

        javax.swing.GroupLayout sidebar_pnLayout = new javax.swing.GroupLayout(sidebar_pn);
        sidebar_pn.setLayout(sidebar_pnLayout);
        sidebar_pnLayout.setHorizontalGroup(
            sidebar_pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
        );
        sidebar_pnLayout.setVerticalGroup(
            sidebar_pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );

        getContentPane().add(sidebar_pn, java.awt.BorderLayout.LINE_START);

        content_pn.setBackground(new java.awt.Color(255, 255, 255));

        main_pn.setBackground(new java.awt.Color(255, 255, 255));
        main_pn.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout content_pnLayout = new javax.swing.GroupLayout(content_pn);
        content_pn.setLayout(content_pnLayout);
        content_pnLayout.setHorizontalGroup(
            content_pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_pn, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        content_pnLayout.setVerticalGroup(
            content_pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_pn, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );

        getContentPane().add(content_pn, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(866, 568));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        main_pn.add(new bg_content());
//        main_pn.repaint();
//        main_pn.revalidate();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                Modellogin modlogin = null;
                new MenuUtama("Id","Username","Level2").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel content_pn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel main_pn;
    private javax.swing.JPanel menu_pn;
    private javax.swing.JPanel navbar_pn;
    private javax.swing.JPanel sidebar_pn;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        //Dashboard
        ImageIcon iconDashboard         = new ImageIcon(getClass().getResource("/image/dashboard_20px.png"));
        
        //Master
        ImageIcon iconMaster            = new ImageIcon(getClass().getResource("/image/master_20px.png"));
        
        //Teacher
        ImageIcon iconTeacher           = new ImageIcon(getClass().getResource("/image/teacher_20px.png"));
        ImageIcon iconIdentity1         = new ImageIcon(getClass().getResource("/image/identity.png"));
        
        
        //Student
        ImageIcon iconStudent           = new ImageIcon(getClass().getResource("/image/mortarboard_20px.png"));
        ImageIcon iconIdentity2         = new ImageIcon(getClass().getResource("/image/identity.png"));
        
        //Mapel
        ImageIcon iconMapel             = new ImageIcon(getClass().getResource("/image/folder_20px.png"));
        ImageIcon iconMapel2            = new ImageIcon(getClass().getResource("/image/book_20px.png"));
        
        //Mark
        ImageIcon iconRaport            = new ImageIcon(getClass().getResource("/image/book_20px.png"));
        ImageIcon iconRaport2           = new ImageIcon(getClass().getResource("/image/report_card_20px.png"));
        
        MenuItem identity1              = new MenuItem (null, true, iconIdentity1, "Identity", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                main_pn.add(new form_teacher());
                main_pn.repaint();
                main_pn.revalidate();
            }
        });
        MenuItem identity2               = new MenuItem(null, true, iconIdentity2, "Identity", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                main_pn.add(new form_student());
                main_pn.repaint();
                main_pn.revalidate();
            }
        });
        
        MenuItem identity3               = new MenuItem(null, true, iconIdentity2, "Identity Teacher", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                main_pn.add(new form_teacher());
                main_pn.repaint();
                main_pn.revalidate();
            }
        });
        MenuItem identity4               = new MenuItem(null, true, iconIdentity2, "Identity Student", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                main_pn.add(new form_student());
                main_pn.repaint();
                main_pn.revalidate();
            }
        });
        
        MenuItem mapel               = new MenuItem(null, true, iconMapel2, "Pelajaran", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                main_pn.add(new Mapel());
                main_pn.repaint();
                main_pn.revalidate();
            }
        });
        
        MenuItem Raport2                 = new MenuItem(null, true, iconRaport, "Raport", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                main_pn.add(new Raport());
                main_pn.repaint();
                main_pn.revalidate();
            }
        });
        MenuItem menuDashboard           = new MenuItem(iconDashboard, false, null, "Dashboard", null);
        MenuItem menuMaster              = new MenuItem(iconMaster, false, null, "Master", null, identity3, identity4);
        MenuItem menuTeacher             = new MenuItem(iconTeacher, false, null, "Teacher", null, identity1);
        MenuItem menuStudent             = new MenuItem(iconStudent, false, null, "Student", null, identity2);
        MenuItem menuMapel               = new MenuItem(iconMapel, false, null, "Mata pelajaran", null, mapel);
        MenuItem menuRaport              = new MenuItem(iconRaport, false, null, "Nilai raport", null, Raport2);

        
        addMenu( menuDashboard, menuMaster, menuTeacher, menuStudent,menuMapel, menuRaport);
    }
    
    private void addMenu(MenuItem... menu) {
        for (int i = 0; i < menu.length; i++) {
            menu_pn.add(menu[i]);
            ArrayList<MenuItem> subMenu = menu[i].getSubMenu();
            for (MenuItem m : subMenu) {
                addMenu(m);
            }
        }
        menu_pn.revalidate();
    }
}
